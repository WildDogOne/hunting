title: Script Interpreter Loading DotNet Assembly From Memory
id: aef9e173-c61a-4acc-a09e-de33e299e108
status: test
description: |
  The query searches for script interpreters (mmc.exe, mshta.exe, wscript.exe, and cscript.exe) loading .NET assemblies from memory.
  In the case of the MMC executable, the query also checks for the MSC file that was loaded, as some legitimate MSC files are known to load .NET assemblies via MMC.
references:
  - https://github.com/FalconForceTeam/FalconFriday/blob/master/Execution/0xFF-0544-Script_Interpreter_Loading_DotNet_Assembly_From_Memory-Win.md
  - https://www.elastic.co/security-labs/grimresource
  - https://github.com/tyranid/DotNetToJScript
  - https://github.com/med0x2e/GadgetToJScript

author:
  - FalconForce
date: 2024/07/04
modified: 2024/07/04
tags:
  - attack.execution
  - attack.t1059.007
  - attack.t1059.005
  - attack.t1218.005
  - attack.t1218.014
  - attack.defenseevasion
  - falcon.0xFF-0544-Script_Interpreter_Loading_DotNet_Assembly_From_Memory-Win
logsource:
  product: microsoft defender for endpoint
detection:
  load: low
  kusto: |
    let timeframe = 2*1h;
    DeviceEvents
    | where ingestion_time() >= ago(timeframe)
    | where ActionType == "ClrUnbackedModuleLoaded"
    | where InitiatingProcessFileName in~ ("mmc.exe","mshta.exe","wscript.exe","cscript.exe")
    | extend DotNetAssemblyName = tostring(parse_json(AdditionalFields).ModuleILPathOrName)
    | extend ParsedCommandLine=parse_command_line(InitiatingProcessCommandLine, "windows")
    // When a .msc file is opened in MMC, the file path is passed as an argument to MMC.
    // Based on testing this is the first argument in the command line. In some cases a command-line switch /32 is passed as the first argument
    // and the file path is the second argument. This is handled by the iif statement below.
    | extend MscFile=ParsedCommandLine[1]
    | extend MscFile=iif(MscFile startswith "/", ParsedCommandLine[2], MscFile)
    // Some Microsoft MSC files are known to load .NET assemblies via MMC.
    | where not(InitiatingProcessFileName =~ "mmc.exe" and (MscFile startswith @"c:\windows\system32\" or MscFile startswith @"C:\Program Files\Update Services\" or MscFile startswith @"C:\ProgramData\Microsoft\Windows\Start Menu\"))
    // Do not alert when MMC is started without any arguments, since in that case it is unknown which MSC file was loaded.
    | where not(InitiatingProcessFileName =~ "mmc.exe" and (array_length(ParsedCommandLine) == 1))
    // Begin environment-specific filter.
    // End environment-specific filter.
falsepositives:
  - Legitimate processes that need to check the MDE configuration, seems Pycharm is one of them...
level: medium
